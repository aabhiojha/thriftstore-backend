openapi: 3.0.3
info:
  title: E-Commerce API
  version: 1.0.0
  description: Ecommerce api with advanced features(still building)
paths:
  /api/auth/account/create_user:
    get:
      operationId: api_auth_account_create_user_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_auth_account_create_user_create
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/account/list_user:
    get:
      operationId: api_auth_account_list_user_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
    post:
      operationId: api_auth_account_list_user_create
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/token:
    post:
      operationId: api_auth_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/auth/token/refresh:
    post:
      operationId: api_auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/category/create:
    post:
      operationId: api_category_create_create
      description: Verify that the current user has all specified permissions.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/category/list:
    get:
      operationId: api_category_list_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/product/create:
    post:
      operationId: api_product_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSerializerForCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductSerializerForCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductSerializerForCreate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSerializerForCreate'
          description: ''
  /api/product/delete/{id}:
    delete:
      operationId: api_product_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/product/list:
    get:
      operationId: api_product_list_list
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductSerializerForListList'
          description: ''
  /api/product/retrieve/{id}:
    get:
      operationId: api_product_retrieve_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSerializerForList'
          description: ''
  /api/product/update/{id}:
    put:
      operationId: api_product_update_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSerializerForUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductSerializerForUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductSerializerForUpdate'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSerializerForUpdate'
          description: ''
    patch:
      operationId: api_product_update_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductSerializerForUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductSerializerForUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductSerializerForUpdate'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSerializerForUpdate'
          description: ''
  /apiorders/:
    get:
      operationId: apiorders_retrieve
      tags:
      - apiorders
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: apiorders_create
      description: It'll create a new order
      tags:
      - apiorders
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    ConditionEnum:
      enum:
      - new
      - like_new
      - good
      - fair
      - poor
      type: string
      description: |-
        * `new` - New
        * `like_new` - Like_new
        * `good` - Good
        * `fair` - Fair
        * `poor` - Poor
    PaginatedProductSerializerForListList:
      type: object
      required:
      - results
      properties:
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cD00ODY%3D"
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?cursor=cj0xJnA9NDg3
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductSerializerForList'
    PatchedProductSerializerForUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        condition:
          $ref: '#/components/schemas/ConditionEnum'
        seller:
          type: integer
        is_available:
          type: boolean
        category:
          type: integer
          writeOnly: true
        category_id:
          type: integer
          readOnly: true
        is_featured:
          type: boolean
        views_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
          readOnly: true
    ProductImage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        is_primary:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - image
    ProductSerializerForCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        condition:
          $ref: '#/components/schemas/ConditionEnum'
        seller:
          type: integer
        is_available:
          type: boolean
        category:
          type: integer
          writeOnly: true
        category_id:
          type: integer
          readOnly: true
        is_featured:
          type: boolean
        views_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
          readOnly: true
      required:
      - category
      - category_id
      - condition
      - created_at
      - id
      - images
      - name
      - price
      - seller
      - updated_at
      - views_count
    ProductSerializerForList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        condition:
          $ref: '#/components/schemas/ConditionEnum'
        seller:
          type: integer
        is_available:
          type: boolean
        category:
          type: integer
          writeOnly: true
        category_id:
          type: integer
          readOnly: true
        is_featured:
          type: boolean
        views_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
          readOnly: true
      required:
      - category
      - category_id
      - condition
      - created_at
      - id
      - images
      - name
      - price
      - seller
      - updated_at
      - views_count
    ProductSerializerForUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        condition:
          $ref: '#/components/schemas/ConditionEnum'
        seller:
          type: integer
        is_available:
          type: boolean
        category:
          type: integer
          writeOnly: true
        category_id:
          type: integer
          readOnly: true
        is_featured:
          type: boolean
        views_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
          readOnly: true
      required:
      - category
      - category_id
      - condition
      - created_at
      - id
      - images
      - name
      - price
      - seller
      - updated_at
      - views_count
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
